task :default => [:build]

desc "Builds the solution using Mono"
task :build do
  	sh "./.paket/paket.exe install"
  	sh "xbuild /verbosity:quiet"
end

desc "Run tests for all modules"
task :test do
  	Rake::Task['test:access_control'].invoke
end

namespace :test do

	desc "Run E2E tests"
	task :e2e do
		sh "./Modules/AccessControl/AccessControl.E2E/mocha"
	end

	desc "Run tests for Access Control module"
	task :e2e do
		sh "chmod a+x ./packages/NUnit.ConsoleRunner/tools/nunit3-console.exe"
	    sh "./packages/NUnit.ConsoleRunner/tools/nunit3-console.exe ./Modules/AccessControl/Tests/bin/Debug/Trackwane.AccessControl.Tests.dll"
	end

end

task :docker do
  	Rake::Task['docker:running'].invoke
end

namespace :docker do

  	groups = [:databases, :monitoring, :trackwane, :infrastructure]

  	desc "Shows running containers for solution"
  	task :running do
    	sh "docker-compose ps"
  	end

  	task :clean do
    	sh "docker rm -v $(docker ps -a -q -f status=exited)"
    	sh "docker rmi $(docker images -f ""dangling=true"" -q)"
  	end

  namespace :up do
    groups.each do |group|
      desc "Starts all " + group.to_s + " containers"
      task group do
        sh "docker-compose --file ./docker/" + group.to_s + ".yml up -d"
      end
    end
  end

  namespace :down do
    groups.each do |group|
      desc "Stops all " + group.to_s + " containers"
      task group do
        sh "docker-compose --file ./docker/" + group.to_s + ".yml down"
      end
    end
  end

end
